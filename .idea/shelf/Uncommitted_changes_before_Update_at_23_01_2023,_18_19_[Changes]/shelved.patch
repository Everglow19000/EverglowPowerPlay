Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/autonomous/AutonomousRoutes.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode.autonomous;\n\nimport com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;\n\nimport org.firstinspires.ftc.teamcode.systems.CameraSystem;\nimport org.firstinspires.ftc.teamcode.systems.ClawSystem;\nimport org.firstinspires.ftc.teamcode.systems.DrivingSystem;\nimport org.firstinspires.ftc.teamcode.systems.ElevatorSystem;\nimport org.firstinspires.ftc.teamcode.systems.FourBarSystem;\n\n/**\n * A class that contains all of the autonomous routes for the robot.\n */\npublic class AutonomousRoutes {\n\tprivate final LinearOpMode opMode;\n\tprivate final DrivingSystem drivingSystem;\n\tprivate final CameraSystem cameraSystem;\n\tprivate final ClawSystem clawSystem;\n\tprivate final ElevatorSystem elevatorSystem;\n\tprivate final FourBarSystem fourBarSystem;\n\n\tpublic AutonomousRoutes(LinearOpMode opMode) {\n\t\tthis.opMode = opMode;\n\t\tdrivingSystem = new DrivingSystem(opMode);\n\t\tcameraSystem = new CameraSystem(opMode);\n\t\tclawSystem = new ClawSystem(opMode);\n\t\televatorSystem = new ElevatorSystem(opMode);\n\t\tfourBarSystem = new FourBarSystem(opMode);\n\t}\n\n\t/**\n\t * A test method that drives the robot forwards or sideways, depending on the value the AprilTag.\n\t */\n\tpublic void run(int right) {\n\t\tclawSystem.goTo(ClawSystem.ClawState.CLOSED);\n\t\tCameraSystem.AprilTagType tagType = cameraSystem.detectAprilTag();\n\t\topMode.telemetry.addData(\"tag\", tagType.toString());\n\t\topMode.telemetry.update();\n\n\t\tint sideWays = -85*right;\n\n\t\tdrivingSystem.driveStraight(60, 0.5);\n\t\tdrivingSystem.driveSideways(sideWays, 0.5);\n\t\televatorSystem.goTo(ElevatorSystem.Level.HIGH);\n\t\tfourBarSystem.goTo(FourBarSystem.FourBarState.DROPOFF);\n\t\tdrivingSystem.driveStraight(5, 0.5);\n\t\tclawSystem.goTo(ClawSystem.ClawState.OPEN);\n\t\topMode.sleep(1000);\n\t\tdrivingSystem.driveStraight(-5, 0.5);\n\t\tclawSystem.goTo(ClawSystem.ClawState.CLOSED);\n\t\tfourBarSystem.goTo(FourBarSystem.FourBarState.PICKUP);\n\t\televatorSystem.goTo(ElevatorSystem.Level.PICKUP);\n\n\t\tswitch (tagType) {\n\t\t\tcase TAG_1:\n\t\t\t\tdrivingSystem.driveSideways(60-sideWays, 0.5);\n\t\t\t\tbreak;\n\t\t\tcase TAG_2:\n\t\t\tdefault:\n\t\t\t\tdrivingSystem.driveSideways(90, 0.5);\n\t\t\t\tbreak;\n\t\t\tcase TAG_3:\n\t\t\t\tdrivingSystem.driveSideways(-65-sideWays, 0.5);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/autonomous/AutonomousRoutes.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/autonomous/AutonomousRoutes.java
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/autonomous/AutonomousRoutes.java	(revision 20c4eb56a55d035a0fdac4ba4cb969848b2a6c9e)
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/autonomous/AutonomousRoutes.java	(date 1674465048780)
@@ -37,19 +37,18 @@
 		opMode.telemetry.addData("tag", tagType.toString());
 		opMode.telemetry.update();
 
-		int sideWays = -85*right;
-
+		int sideWays = 0;//-85*right
 		drivingSystem.driveStraight(60, 0.5);
-		drivingSystem.driveSideways(sideWays, 0.5);
-		elevatorSystem.goTo(ElevatorSystem.Level.HIGH);
-		fourBarSystem.goTo(FourBarSystem.FourBarState.DROPOFF);
-		drivingSystem.driveStraight(5, 0.5);
-		clawSystem.goTo(ClawSystem.ClawState.OPEN);
-		opMode.sleep(1000);
-		drivingSystem.driveStraight(-5, 0.5);
-		clawSystem.goTo(ClawSystem.ClawState.CLOSED);
-		fourBarSystem.goTo(FourBarSystem.FourBarState.PICKUP);
-		elevatorSystem.goTo(ElevatorSystem.Level.PICKUP);
+//		drivingSystem.driveSideways(sideWays, 0.5);
+//		elevatorSystem.goTo(ElevatorSystem.Level.HIGH);
+//		fourBarSystem.goTo(FourBarSystem.FourBarState.DROPOFF);
+//		drivingSystem.driveStraight(5, 0.5);
+//		clawSystem.goTo(ClawSystem.ClawState.OPEN);
+//		opMode.sleep(1000);
+//		drivingSystem.driveStraight(-5, 0.5);
+//		clawSystem.goTo(ClawSystem.ClawState.CLOSED);
+//		fourBarSystem.goTo(FourBarSystem.FourBarState.PICKUP);
+//		elevatorSystem.goTo(ElevatorSystem.Level.PICKUP);
 
 		switch (tagType) {
 			case TAG_1:
Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/opmodes/DriveTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/opmodes/DriveTest.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/opmodes/DriveTest.java
new file mode 100644
--- /dev/null	(date 1674456624946)
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/opmodes/DriveTest.java	(date 1674456624946)
@@ -0,0 +1,46 @@
+package org.firstinspires.ftc.teamcode.opmodes;
+
+import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
+import com.qualcomm.robotcore.hardware.DcMotor;
+
+public class DriveTest extends LinearOpMode {
+    private DcMotor frontRight;
+    private DcMotor frontLeft;
+    private DcMotor backRight;
+    private DcMotor backLeft;
+
+    @Override
+    public void runOpMode() throws InterruptedException {
+        frontRight = this.hardwareMap.get(DcMotor.class, "front_right");
+        frontLeft = this.hardwareMap.get(DcMotor.class, "front_left");
+        backLeft = this.hardwareMap.get(DcMotor.class, "back_left");
+        backRight = this.hardwareMap.get(DcMotor.class, "back_right");
+
+        while (opModeIsActive()){
+            if (gamepad1.circle){
+                frontRight.setPower(0.5);
+            }else {
+                frontRight.setPower(0);
+            }
+
+
+            if (gamepad1.square){
+                frontLeft.setPower(0.5);
+            }else {
+                frontLeft.setPower(0);
+            }
+
+            if (gamepad1.triangle){
+                backRight.setPower(0.5);
+            }else {
+                backRight.setPower(0);
+            }
+
+            if (gamepad1.cross){
+                backLeft.setPower(0.5);
+            }else {
+                backLeft.setPower(0);
+            }
+        }
+    }
+}
